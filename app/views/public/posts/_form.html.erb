<%= flash[:error] %>
<%= render 'errors', post: post %>
<p class="text-center">公開範囲：下書き保存を選択した場合は<span class="bg-danger text-light pl-1 pr-1 ml-1">必須</span>項目が空欄でも保存可能です</p>
<div class="container">
    <div class="row d-flex justify-content-center">
      <div class="col-md-8 shadow p-5">
        <%= form_with model: post, local: true do |f| %>
          <div class="d-flex justify-content-center mb-3">
            <%= attachment_image_tag post, :post_image, class: "card img-square", fallback: "noimage.png", size: "300x300" %>
          </div>
          <div class="d-flex justify-content-center form-group">
            <%= f.file_field :post_image, id: "image", accept: "image/*", class: "form-control-file" %>
          </div>

          <div class="p-2 bg-info form-group">
            <h4>美術展情報</h4>
          </div>

          <!--美術展名-->
          <div class="form-group">
            <div class="d-flex flex-row">
              <%= f.label :art_exhibition_name, "美術展名", class: "h5" %>
              <p class="bg-danger text-light pl-1 pr-1 ml-1">必須</p>
            </div>
            <%= f.text_field :art_exhibition_name, placeholder: "美術展名", class: "form-control" %>
            <!--フォーム下に表示されるエラーメッセージ-->
            <%= render 'error_messages', model: post, attribute: :art_exhibition_name %>
          </div>

          <!--美術館名-->
          <div class="form-group">
            <div class="d-flex flex-row">
              <%= f.label :gallery_name, "美術館名", class: "h5" %>
              <p class="bg-danger text-light pl-1 pr-1 ml-1">必須</p>
            </div>
            <%= f.text_field :gallery_name, placeholder: "美術館名", class: "form-control" %>
            <!--フォーム下に表示されるエラーメッセージ-->
            <%= render 'error_messages', model: post, attribute: :gallery_name %>
          </div>

          <!--会期選択-->
          <div class="form-group">
            <div class="d-flex flex-row">
              <%= f.label :start_date, "開始日", class: "h5" %>
              <p class="bg-danger text-light pl-1 pr-1 ml-1">必須</p>
            </div>
            <%= f.date_field :start_date, class: "form-control" %>
            <!--フォーム下に表示されるエラーメッセージ-->
            <%= render 'error_messages', model: post, attribute: :start_date %>
            <div class="d-flex flex-row mt-3">
              <%= f.label :end_date, "終了日", class: "h5" %>
              <p class="bg-danger text-light pl-1 pr-1 ml-1">必須</p>
            </div>
            <%= f.date_field :end_date, class: "form-control" %>
            <!--フォーム下に表示されるエラーメッセージ-->
            <%= render 'error_messages', model: post, attribute: :end_date %>
          </div>

          <!--入場料-->
          <div class="form-group">
            <%= f.label :admission, "入場料", class: "h5" %>
            <p class="text-primary"><i class="fas fa-check"></i>　半角数字を入力してください</p>
            <%= f.number_field :admission, placeholder: "入場料", class: "form-control" %>
            <p class="text-right">円</p>
          </div>

          <!--開催地域選択-->
          <div class="form-group">
            <div class="d-flex flex-row">
              <%= f.label :holding_area, "開催地域選択", class: "h5" %>
              <p class="bg-danger text-light pl-1 pr-1 ml-1">必須</p>
            </div>
            <!--Post.holding_areasで支払日のenumをハッシュの形で取得-->
            <!--keysで取得したハッシュのキーを配列の形で取得。map メソッドで新たに配列を生成。-->
            <!--第二引数（with_index）で要素の添字を変数 i として取得。変数 i (数値)がvalueに渡される。-->
            <!--t("enum.post.holding_area.#{k}")→ja.ymlの表記の通りに翻訳するというメソッド-->
            <%= f.select :holding_area, Post.holding_areas.keys.map.with_index { |k| [t("enum.post.holding_area.#{k}"), k] }, { include_blank: "選択してください" }, class: "prefecture-select form-control" %>
            <!--フォーム下に表示されるエラーメッセージ-->
            <%= render 'error_messages', model: post, attribute: :holding_area %>
          </div>

          <!--住所-->
          <div class="form-group">
            <%= f.label :address, "住所", class: "h5" %>
            <%= f.text_field :address, placeholder: "住所", class: "form-control" %>
          </div>

          <!--撮影可否選択のラジオボタン-->
          <div class="d-flex flex-column form-group">
            <div>
              <div class="d-flex flex-row">
                <%= f.label :shooting_availability, "撮影可否", class: "h5" %>
                <p class="bg-danger text-light pl-1 pr-1 ml-1">必須</p>
              </div>
            </div>
            <!--撮影不可-->
            <div>
              <%= f.radio_button :shooting_availability, Post.shooting_availabilities.key(0) %>
              <%= f.label :shooting_availability_shooting_not_possible, Post.shooting_availabilities_i18n[:shooting_not_possible] %>
            </div>
            <!--撮影可-->
            <div>
              <%= f.radio_button :shooting_availability, Post.shooting_availabilities.key(1) %>
              <%= f.label :shooting_availability_shooting_allowed, Post.shooting_availabilities_i18n[:shooting_allowed] %>
            </div>
            <!--不明-->
            <div>
              <%= f.radio_button :shooting_availability, Post.shooting_availabilities.key(2) %>
              <%= f.label :shooting_availability_unknown, Post.shooting_availabilities_i18n[:unknown] %>
              <!--フォーム下に表示されるエラーメッセージ-->
              <%= render 'error_messages', model: post, attribute: :shooting_availability %>
            </div>
          </div>

          <!--登録タグ-->
          <div class="form-group">
            <h5>登録タグ</h5>
            <p class="text-primary"><i class="fas fa-check"></i>　複数登録の場合は半角カンマ(,)で区切ってください</p>
            <%= f.text_field :tag_list, value: post.tag_list.join(','), class: "form-control", placeholder: "タグ" %>
          </div>
          <div class="p-2 bg-info form-group">
            <h4>レビュー内容</h4>
          </div>

          <!--注目ポイント-->
          <div class="form-group">
            <div class="d-flex flex-row">
              <%= f.label :point, "注目ポイント", class: "h5" %>
              <p class="bg-danger text-light pl-1 pr-1 ml-1">必須</p>
            </div>
            <%= f.text_field :point, placeholder: "注目ポイント", class: "form-control" %>
            <!--フォーム下に表示されるエラーメッセージ-->
            <%= render 'error_messages', model: post, attribute: :point %>
          </div>

          <!--本文-->
          <div class="form-group">
            <div class="d-flex flex-row">
              <%= f.label :bodt, "本文", class: "h5" %>
              <p class="bg-danger text-light pl-1 pr-1 ml-1">必須</p>
            </div>
            <%= f.text_area :body, placeholder: "本文", class: "form-control", rows: "5" %>
            <!--フォーム下に表示されるエラーメッセージ-->
            <%= render 'error_messages', model: post, attribute: :body %>
          </div>

          <!--公開範囲選択のラジオボタン-->
          <div class="form-group">
            <div>
              <%= f.label :is_draft, "公開範囲", class: "h5" %>
            </div>
            <div>
              <%= f.radio_button :is_draft, :false %>
              <%= f.label :is_draft, "公開", { value: :false } %>
            </div>
            <div>
              <%= f.radio_button :is_draft, :true %>
              <%= f.label :is_draft, "下書き保存", { value: :true } %>
            </div>
          </div>

          <!--投稿・保存ボタン、下書き一覧ボタン-->
          <% if post.is_draft == false %>
            <div class="pb-3">
              <%= f.submit '投稿', class: 'btn btn-success form-control' %>
            </div>
          <% else %>
            <div class="pb-3">
              <%= f.submit '保存', class: 'btn btn-secondary form-control' %>
            </div>
          <% end %>
          <div class="border-top pt-3">
          <%= link_to "下書き一覧", confirm_user_path(current_user), class: 'btn btn-outline-secondary form-control' %>
          </div>
        <% end %>
      </div>
    </div>
</div>

<script>
  $(function() {
      // 画像が選択された時に発火
      $('#image').on('change', function() {
        // this.files[0]は、選択された画像のこと
        // selectedFileに、選択された画像を格納を宣言
        var selectedFile = this.files[0];
        // FileReaderを起動
        var fileReader = new FileReader();
        // selectedFile(選択された画像)をbase64文字列に変換
        // HTML上で画像を表示するには画像を文字列に変換する必要があるため
        // .onloadは、処理が成功したら次に行く記述
        fileReader.onload = function(event) {
          // 画像ファイルが文字列に変換成功したらイベントが発火
          var loadedImageUri = event.target.result;
          // loadedImageUriに、文字列化した画像ファイルを格納
          $('.img-square').attr('src', loadedImageUri);
        };
        fileReader.readAsDataURL(selectedFile);
      });
    });
</script>